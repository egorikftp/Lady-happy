apply plugin: "com.github.ben-manes.versions"

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.71'
        classpath 'com.google.gms:google-services:4.0.1'
        classpath 'io.fabric.tools:gradle:1.26.1'
        // classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * Disable Dagger formatting of generated code
 * */
tasks.withType(JavaCompile).all {
    options.compilerArgs += [
            '-Adagger.formatGeneratedSource=disabled'
    ]
}

afterEvaluate {
    def kapt = extensions.findByName('kapt')
    if (kapt != null) {
        kapt.arguments {
            arg("dagger.formatGeneratedSource", "disabled")
        }
    }
}

/**
 * Enable Dagger incremental annotation processing
 * */
gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Adagger.gradle.incremental"
    }
}